// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using System.Linq;
using Microsoft.ML;
using CreditCardFraudDetectionML.Model;

namespace CreditCardFraudDetectionML.ConsoleApp
{
    class Program
    {
        //Dataset to use for predictions 
        private const string DATA_FILEPATH = @"C:\Users\mhabi\Desktop\creditcard.csv";

        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = CreateSingleDataSample(DATA_FILEPATH);

            // Make a single prediction on the sample data and print results
            ModelOutput predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Class with predicted Class from sample data...\n\n");
            Console.WriteLine($"Time: {sampleData.Time}");
            Console.WriteLine($"V1: {sampleData.V1}");
            Console.WriteLine($"V2: {sampleData.V2}");
            Console.WriteLine($"V3: {sampleData.V3}");
            Console.WriteLine($"V4: {sampleData.V4}");
            Console.WriteLine($"V5: {sampleData.V5}");
            Console.WriteLine($"V6: {sampleData.V6}");
            Console.WriteLine($"V7: {sampleData.V7}");
            Console.WriteLine($"V8: {sampleData.V8}");
            Console.WriteLine($"V9: {sampleData.V9}");
            Console.WriteLine($"V10: {sampleData.V10}");
            Console.WriteLine($"V11: {sampleData.V11}");
            Console.WriteLine($"V12: {sampleData.V12}");
            Console.WriteLine($"V13: {sampleData.V13}");
            Console.WriteLine($"V14: {sampleData.V14}");
            Console.WriteLine($"V15: {sampleData.V15}");
            Console.WriteLine($"V16: {sampleData.V16}");
            Console.WriteLine($"V17: {sampleData.V17}");
            Console.WriteLine($"V18: {sampleData.V18}");
            Console.WriteLine($"V19: {sampleData.V19}");
            Console.WriteLine($"V20: {sampleData.V20}");
            Console.WriteLine($"V21: {sampleData.V21}");
            Console.WriteLine($"V22: {sampleData.V22}");
            Console.WriteLine($"V23: {sampleData.V23}");
            Console.WriteLine($"V24: {sampleData.V24}");
            Console.WriteLine($"V25: {sampleData.V25}");
            Console.WriteLine($"V26: {sampleData.V26}");
            Console.WriteLine($"V27: {sampleData.V27}");
            Console.WriteLine($"V28: {sampleData.V28}");
            Console.WriteLine($"Amount: {sampleData.Amount}");
            Console.WriteLine($"\n\nActual Class: {sampleData.Class} \nPredicted Class: {predictionResult.Prediction}\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single row of dataset to try a single prediction
        private static ModelInput CreateSingleDataSample(string dataFilePath)
        {
            // Create MLContext
            MLContext mlContext = new MLContext();

            // Load dataset
            IDataView dataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: dataFilePath,
                                            hasHeader: true,
                                            separatorChar: ',',
                                            allowQuoting: true,
                                            allowSparse: false);

            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false)
                                                                        .First();
            return sampleForPrediction;
        }
        #endregion
    }
}
